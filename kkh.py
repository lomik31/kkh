# -*- coding: utf-8 -*-
import telebot
from telebot import types
import time
import rec_file
from threading import Thread
import random
import yadisk
import shutil
import datetime
import schedule
import json

with open("usrs.json", encoding="utf-8") as file_readed:
    file_readed = json.load(file_readed)
with open("config.json", encoding="utf-8") as config:
    config = json.load(config)

bot = telebot.TeleBot(config["telegramToken"])
y = yadisk.YaDisk(token=config["yandexDiskToken"])

@bot.message_handler(commands=["start"])
def start_command(message):
    if (bot.get_chat(message.chat.id).type != "private"):
        if str(message.chat.id) not in file_readed["groups"].keys():
             firstName = bot.get_chat(message.chat.id).first_name;
             lastName = bot.get_chat(message.chat.id).last_name
             rec_file.append_id(message.chat.id, bot.get_chat(message.chat.id).type, firstName, lastName, file_readed);
        bot.send_message(message.chat.id, "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º!");
    else:
        if str(message.from_user.id) not in file_readed["users"].keys():
            rec_file.append_id(message.from_user.id, bot.get_chat(message.chat.id).type, None, None, file_readed);
            bot.send_message(message.chat.id, config["messages"]["startCommand"], disable_web_page_preview=True, reply_markup=main_menu_buttons(), parse_mode="MARKDOWN");
        else:
            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, config["messages"]["startCommand"]);

@bot.message_handler(content_types=["text"])
def send_text(message):
    if (message.text != None): message_text = message.text.lower().split(" ")
    if message_text[0] != "–∫–º–¥" and message_text[0] != "_":
        if check_messages(message, message_text) != False:
            if str(message.from_user.id) in file_readed["users"].keys():
                rec_file.append_last_command(message.from_user.id, message.text, file_readed);
    elif message_text[0] == "_":
        repeat_command(message)
    else:
        rec_file.append_last_command(message.from_user.id, message.text, file_readed)
        if rec_file.get_admin(message.from_user.id, file_readed) == 1:
            if len(message_text) < 3: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∫–º–¥ <id> <–∫–æ–º–∞–Ω–¥–∞>")
            try:
                if message_text[1] == "_":
                    userid = message.reply_to_message
                    if userid != None: userid = userid.from_user.id
                    else: userid = 0
                else: userid = int(message_text[1])
            except ValueError: return bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π id. ID –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä!")
            if (userid == 0): return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `_` –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            if (userid not in rec_file.get_ids(file_readed)): return bot.send_message(message.chat.id, "ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
            message_text = message_text[2::]
            message.from_user.id = userid
            a = message.text.split(" ")[2::]
            message.text = ""
            b = 0
            for i in a:
                b = len(a) - 1
                if b == 0:
                    message.text += i
                else:
                    message.text += f"{i} "
            if message_text[0] == "–∫–º–¥": return bot.send_message(message.chat.id, "—ç, —Ç–∞–∫ –Ω–µ–ª—å–∑—è, –±–∞–Ω")
            check_messages(message, message_text)
                
def whiletrue():
    global file_readed
    while True:
        rec_file.time_nachislenie(file_readed)
        time.sleep(1)
def backup_whiletrue():
    today = datetime.datetime.today()
    name = f"backup-{today.strftime('%Y-%m-%d_%H.%M.%S')}.txt"
    shutil.copyfile("usrs.json", f"backups/{name}")
    y.upload(f"backups/{name}", (f"/kkh_backups/{name}"))
    time.sleep(7200)
def updateUsersNameInFile():
    dict = rec_file.updateUserName(file_readed)
    for i in dict:
        try:
            i[1] = bot.get_chat(int(i[0])).first_name
            i[2] = bot.get_chat(int(i[0])).last_name
        except: pass
    rec_file.updateUserNameWrite(dict, file_readed)
def schedule_checker():
    while True:
        schedule.run_pending()
        time.sleep(1)
Thread(target=whiletrue).start()
Thread(target=backup_whiletrue).start()
schedule.every().day.at("00:00").do(rec_file.balance_boost_nachislenie, file_readed)
schedule.every().day.at("04:20").do(updateUsersNameInFile)
Thread(target=schedule_checker).start()

#–∫–Ω–æ–ø–∫–∏
def main_menu_buttons():
    main_menu_board = types.ReplyKeyboardMarkup(True)
    button_click = types.KeyboardButton("üîÆ")
    button_upgrades = types.KeyboardButton("–ê–ø–≥—Ä–µ–π–¥—ã")
    button_balance = types.KeyboardButton("–ë–∞–ª–∞–Ω—Å")
    button_reset = types.KeyboardButton("–°–±—Ä–æ—Å")
    main_menu_board.add(button_click)
    main_menu_board.add(button_upgrades, button_balance)
    main_menu_board.add(button_reset)
    return main_menu_board
def upgades_buttons(id):
    upgades_board = types.ReplyKeyboardMarkup(True)
    button_sec = types.KeyboardButton(f"+—Å–µ–∫ ({rec_file.ob_chisla(rec_file.cal_boost_sec(id, file_readed))} –ö–®)")
    button_click = types.KeyboardButton(f"+–∫–ª–∏–∫ ({rec_file.ob_chisla(rec_file.cal_boost_click(id, file_readed))} –ö–®)")
    if rec_file.get_skidka(id, file_readed) >= 25:
        button_skidka = types.KeyboardButton(message_max_skidka())
    else:
        button_skidka = types.KeyboardButton(f"+1% —Å–∫–∏–¥–∫–∏ ({rec_file.ob_chisla(rec_file.cal_boost_skidka(id, file_readed))} –ö–®)")
    if rec_file.get_boost_balance(id, file_readed) >= 15:
        button_boost_balance = types.KeyboardButton(message_max_boost_balance())
    else:
        button_boost_balance = types.KeyboardButton(f"+1% –±–∞–ª–∞–Ω—Å–∞/–¥–µ–Ω—å ({rec_file.ob_chisla(rec_file.cal_boost_balance(id, file_readed))} –ö–®)")
    button_back = types.KeyboardButton("–ù–∞–∑–∞–¥")
    upgades_board.add(button_sec, button_click)
    upgades_board.add(button_skidka, button_boost_balance)
    upgades_board.add(button_back)
    return upgades_board
#—Å–æ–æ–±—â–µ–Ω–∏—è —é–∑–µ—Ä—É
def message_bought_upgrade(user_message, a):
    return f"–£—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω–æ –∞–ø–≥—Ä–µ–π–¥–æ–≤: {a}\nid: `{user_message.from_user.id}`\n–ê–ø–≥—Ä–µ–π–¥—ã: {file_readed['users'][str(user_message.from_user.id)]['sec']}/—Å–µ–∫; {file_readed['users'][str(user_message.from_user.id)]['click']}/–∫–ª–∏–∫; {rec_file.get_skidka(user_message.from_user.id, file_readed)}% —Å–∫–∏–¥–∫–∏; {rec_file.get_boost_balance(user_message.from_user.id, file_readed)}% –±–∞–ª–∞–Ω—Å–∞/–¥–µ–Ω—å\n–ë–∞–ª–∞–Ω—Å: {rec_file.ob_chisla(file_readed['users'][str(user_message.from_user.id)]['balance'])} –ö–®"
def message_not_enough_money_click(user_message):
    return f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –î–ª—è –ø–æ–∫—É–ø–∫–∏ –µ—â—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {rec_file.ob_chisla(str(rec_file.cal_boost_click(user_message.from_user.id, file_readed) - rec_file.get_balance(user_message.from_user.id, file_readed)))} –ö–®"
def message_not_enough_money_sec(user_message):
    return f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –î–ª—è –ø–æ–∫—É–ø–∫–∏ –µ—â—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {rec_file.ob_chisla(rec_file.cal_boost_sec(user_message.from_user.id, file_readed) - rec_file.get_balance(user_message.from_user.id, file_readed))} –ö–®"
def message_not_enough_money_boost_balance(user_message):
    return f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –î–ª—è –ø–æ–∫—É–ø–∫–∏ –µ—â—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {rec_file.ob_chisla(rec_file.cal_boost_balance(user_message.from_user.id, file_readed) - rec_file.get_balance(user_message.from_user.id, file_readed))} –ö–®"
def sendmessage_check_active_keyboard(chatid, userid, userOrGroup, send_message):
    if (userOrGroup == "private"):
        if rec_file.get_keyboard(userid, file_readed):
            if rec_file.get_active_passive_keyboard(userid, file_readed) == 1: bot.send_message(chatid, send_message, reply_markup=upgades_buttons(userid), disable_web_page_preview = True, parse_mode="MARKDOWN")#–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
            else: bot.send_message(chatid, send_message, disable_web_page_preview = True, parse_mode="MARKDOWN")#–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        else: bot.send_message(chatid, send_message, disable_web_page_preview = True, parse_mode="MARKDOWN")
    else:
        if (file_readed["groups"][str(chatid)]["keyboard"]):
            if (file_readed["groups"][str(chatid)]["activeKeyboard"]): bot.send_message(chatid, send_message, reply_markup=upgades_buttons(userid), disable_web_page_preview = True, parse_mode="MARKDOWN")#–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
            else: bot.send_message(chatid, send_message, disable_web_page_preview = True, parse_mode="MARKDOWN")#–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        else: bot.send_message(chatid, send_message, disable_web_page_preview = True, parse_mode="MARKDOWN")
def message_max_skidka():
    return "–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º –∞–ø–≥—Ä–µ–π–¥–æ–≤ —Å–∫–∏–¥–∫–∏"
def message_max_boost_balance():
    return "–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º—É–º –∞–ø–≥—Ä–µ–π–¥–æ–≤ –±–∞–ª–∞–Ω—Å–∞/–¥–µ–Ω—å"
def message_not_enough_money_skidka(user_message):
    return f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –î–ª—è –ø–æ–∫—É–ø–∫–∏ –µ—â—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {rec_file.ob_chisla(str(rec_file.cal_boost_skidka(user_message.from_user.id, file_readed) - rec_file.get_balance(user_message.from_user.id, file_readed)))} –ö–®"
#–¥—Ä—É–≥–æ–µ
def manual_backup():
    today = datetime.datetime.today()
    name = "backup-" + today.strftime("%Y-%m-%d_%H.%M.%S") + ".txt"
    shutil.copyfile("usrs.json", f"backups/{name}")
    y.upload(f"backups/{name}", (f"/kkh_backups/{name}"))
    return "–ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä!"

def check_messages(message, message_text):
    #if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!");
    if message.text.lower() == "–∫–ª–∏–∫" or message.text == "üîÆ":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.click(message, message_text)
    elif message_text[0] == "+—Å–µ–∫":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.buy_sec(message, message_text)
    elif message_text[0] == "+–∫–ª–∏–∫":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.buy_click(message, message_text)
    elif message_text[0] == "+—Å–∫–∏–¥–∫–∞":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.buy_skidka(message, message_text)
    elif message_text[0] == "+–±–∞–ª–∞–Ω—Å" or message_text[0] == "+–±–∞–ª–∞–Ω—Å/–¥–µ–Ω—å" or message_text[0] == "+–±–±":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.buy_procent_balance(message, message_text)
    elif message_text[0] == "+–±—É—Å—Ç":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        if len(message_text) >= 2:
            if message_text[1] == "–±–∞–ª–∞–Ω—Å–∞" or message_text[1] == "–±–∞–ª–∞–Ω—Å":
                kmd.buy_procent_balance(message, message_text)
    elif message_text[0] == "+1%":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        if len(message_text) >= 2:
            if message_text[1] == "—Å–∫–∏–¥–∫–∏":
                kmd.buy_skidka_2(message, message_text)
            elif message_text[1] == "–±–∞–ª–∞–Ω—Å–∞/–¥–µ–Ω—å":
                kmd.buy_procent_balance_2(message, message_text)
    elif message_text[0] == "—Ü–µ–Ω–∞":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.price(message, message_text)
    elif message_text[0] == "–¥–æ–±–∞–≤–∏—Ç—å":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.add_money(message, message_text)
    elif message_text[0] == "–±–∞–ª–∞–Ω—Å" or message_text[0] == "–±":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.balance(message, message_text)
    elif message.text.lower() == "–∞–ø–≥—Ä–µ–π–¥—ã":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.upgrades(message, message_text)
    elif message.text.lower() == "–Ω–∞–∑–∞–¥":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.back(message, message_text)
    elif message_text[0] == "–º–æ–Ω–µ—Ç–∞" or message_text[0] == "–º–æ–Ω–µ—Ç–∫–∞":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.moneta(message, message_text)
    elif message_text[0] == "—Å–±—Ä–æ—Å":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.reset(message, message_text)
    elif message_text[0] == "–ø–µ—Ä–µ–≤–æ–¥":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.pay(message, message_text)
    elif message_text[0] == "–∞–¥–º–∏–Ω":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.admin(message, message_text)
    elif message.text.lower() == "–±–æ–Ω—É—Å":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.bonus(message, message_text)
    elif (message_text[0] == "–ø—Ä–æ–º–æ") and (len(message_text) > 1) and(message_text[1] == "–¥–æ–±–∞–≤–∏—Ç—å"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.addPromo(message, message_text);
    elif (message_text[0] == "–ø—Ä–æ–º–æ") and (len(message_text) > 1) and (message_text[1] == "—É–¥–∞–ª–∏—Ç—å"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.delPromo(message, message_text);
    elif (message_text[0] == "–ø—Ä–æ–º–æ") and (len(message_text) > 1) and (message_text[1] == "–∏–Ω—Ñ–æ"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.promoInf(message, message_text);
    elif (message_text[0] == "–ø—Ä–æ–º–æ") and (len(message_text) > 1) and(message_text[1] == "–ª–∏—Å—Ç"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.promoList(message, message_text);
    elif message_text[0] == "–ø—Ä–æ–º–æ":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.activate_promo(message, message_text)
    elif message_text[0] == "–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.keyboard(message, message_text)
    elif message_text[0] == "—Ä–∞—Å—Å—ã–ª–∫–∞":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.rassilka(message, message_text)
    elif message_text[0] == "–±—ç–∫–∞–ø":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.backup(message, message_text)
    elif message.text.lower() == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.main_menu(message, message_text)
    elif message.text.lower() == "–Ω–∞—á–∞—Ç—å":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        start_command(message)
    elif message.text.lower() == "–∫–æ–º–∞–Ω–¥—ã":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.commandsList(message, message_text)
    elif message_text[0] == "–∏–Ω—Ñ–æ":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.full_inf_user(message, message_text);
    elif message_text[0] == "–¥—é–∑–µ—Ä":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.del_user(message, message_text);
    elif message_text[0] == "—é–∑–µ—Ä—Å–ª–∏—Å—Ç":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.userlist(message, message_text);
    elif message_text[0] == "–±–¥–∑–∞–ø–∏—Å—å" or message_text[0] == "–∑–∞–ø–∏—Å—å–±–¥" or message_text[0] == "–∑–∞–ø–∏—Å—å":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.manual_write_file(message, message_text);
    elif message.text.lower() == "–±–æ–Ω—É—Å2":
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.bonus2(message, message_text)
    elif (message_text[0] == "–∫–æ–º–∞–Ω–¥–∞"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.helpCommand(message, message_text);
    elif (message_text[0] == "–ø–æ—Å–ª–∞—Ç—å") or (message_text[0] == "–ø–æ—Å–ª–∞—Ç—å–∞–Ω–æ–Ω"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.sendUser(message, message_text);
    elif (message_text[0] == "—Ç–æ–ø"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.userTop(message, message_text)
    elif (message_text[0] == "chatinfo"):
        if (str(message.from_user.id) not in file_readed["users"].keys()): return bot.send_message(message.chat.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É *–≤ –õ–°* –∫–æ–º–∞–Ω–¥—É /start!")
        kmd.chatInfo(message, message_text)
    else:
        return False
def repeat_command(message):
    command = rec_file.get_last_command(message.from_user.id, file_readed)
    comm = None
    try: comm = int(command)
    except: pass
    if comm == "": bot.send_message(message.chat.id, "–ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞")
    else:
        message.text = command
        send_text(message)
#kmd
class kmd:
    def click(message, message_text):
        rec_file.click_nachislenie(message.from_user.id, file_readed)
        bot.send_message(message.chat.id, f"–ö–æ–ª–ª–µ–∫—Ü–∏—è –∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã—Ö —à–∞—Ä–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∞!\n–ë–∞–ª–∞–Ω—Å: {rec_file.ob_chisla(rec_file.get_balance(message.from_user.id, file_readed))} –ö–®")
    def buy_sec(message, message_text):
        if len(message_text) == 1:
            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_sec(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_sec(message))
            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_sec(message.from_user.id, file_readed), file_readed)
            rec_file.append_sec(message.from_user.id, 1, file_readed)
            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
        elif len(message_text) >= 2:
            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_sec(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_sec(message))
            a = 0
            try:
                for i in range(0, int(message_text[1])):
                    if rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_sec(message.from_user.id, file_readed):
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_sec(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
                        rec_file.append_sec(message.from_user.id, 1, file_readed)
                        a += 1
                sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
            except:
                if message_text[1] == "–≤—Å–µ" or message_text[1] == "–≤—Å—ë":
                    if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_sec(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_sec(message))
                    while rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_sec(message.from_user.id, file_readed):
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_sec(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
                        rec_file.append_sec(message.from_user.id, 1, file_readed)
                        a += 1
                    sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
                elif (len(message_text) >= 3):
                    try:
                        if message_text[1][0] == "(" and message_text[2][-1] == ")":
                            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_sec(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_sec(message))
                            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_sec(message.from_user.id, file_readed), file_readed)
                            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
                            rec_file.append_sec(message.from_user.id, 1, file_readed)
                            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))  
                        else:
                            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä +—Å–µ–∫ [–∫–æ–ª-–≤–æ –∞–ø–≥—Ä–µ–π–¥–æ–≤]")
                    except: pass
    def buy_click(message, message_text):
        if len(message_text) == 1:
            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_click(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_click(message))
            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_click(message.from_user.id, file_readed), file_readed)
            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_click(message.from_user.id, file_readed)
            rec_file.append_click(message.from_user.id, 1, file_readed)
            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
        elif len(message_text) >= 2:
            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_click(message.from_user.id, file_readed): return  bot.send_message(message.chat.id, message_not_enough_money_click(message))
            a = 0
            try:
                for i in range(0, int(message_text[1])):
                    if rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_click(message.from_user.id, file_readed):
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_click(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_click(message.from_user.id, file_readed)
                        rec_file.append_click(message.from_user.id, 1, file_readed)
                        a += 1
                sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
            except:
                if message_text[1] == "–≤—Å–µ" or message_text[1] == "–≤—Å—ë":
                    if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_click(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_click(message))
                    while rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_click(message.from_user.id, file_readed):
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_click(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_click(message.from_user.id, file_readed)
                        rec_file.append_click(message.from_user.id, 1, file_readed)
                        a += 1
                    sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
                elif (len(message_text) >= 3):
                    try:
                        if message_text[1][0] == "(" and message_text[2][-1] == ")":
                            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_click(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_click(message))
                            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_click(message.from_user.id, file_readed), file_readed)
                            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_click(message.from_user.id, file_readed)
                            rec_file.append_click(message.from_user.id, 1, file_readed)
                            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
                        else:
                            bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä +–∫–ª–∏–∫ [–∫–æ–ª-–≤–æ –∞–ø–≥—Ä–µ–π–¥–æ–≤]")
                    except:
                        pass
    def buy_skidka(message, message_text):
        if rec_file.get_skidka(message.from_user.id, file_readed) >= 25: return bot.send_message(message.chat.id, message_max_skidka())
        if len(message_text) == 1:
            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_skidka(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_skidka(message))
            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_skidka(message.from_user.id, file_readed), file_readed)
            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_skidka(message.from_user.id, file_readed)
            rec_file.append_skidka(message.from_user.id, 1, file_readed)
            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
        elif len(message_text) >= 2:
            a = 0
            try:
                for i in range(0, int(message_text[1])):
                    if rec_file.get_skidka(message.from_user.id, file_readed) < 25:
                        if rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_skidka(message.from_user.id, file_readed):
                            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_skidka(message.from_user.id, file_readed), file_readed)
                            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_skidka(message.from_user.id, file_readed)
                            rec_file.append_skidka(message.from_user.id, 1, file_readed)
                            a += 1
                sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
            except:
                if message_text[1] == "–≤—Å–µ" or message_text[1] == "–≤—Å—ë":
                    if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_skidka(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_skidka(message))
                    while rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_skidka(message.from_user.id, file_readed) and rec_file.get_skidka(message.from_user.id, file_readed) < 25:
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_skidka(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_skidka(message.from_user.id, file_readed)
                        rec_file.append_skidka(message.from_user.id, 1, file_readed)
                        a += 1
                    sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
                else: bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä +—Å–∫–∏–¥–∫–∞ [–∫–æ–ª-–≤–æ –∞–ø–≥—Ä–µ–π–¥–æ–≤]")
    def buy_skidka_2(message, message_text):
        if rec_file.get_skidka(message.from_user.id, file_readed) >= 25: return bot.send_message(message.chat.id, message_max_skidka())
        if len(message_text) >= 4:
            if message_text[1] == '—Å–∫–∏–¥–∫–∏':
                try:
                    if message_text[2][0] == "(" and message_text[3][-1] == ")":
                        if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_skidka(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_skidka(message))
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_skidka(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_skidka(message.from_user.id, file_readed)
                        rec_file.append_skidka(message.from_user.id, 1, file_readed)
                        sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
                except: pass
    def price(message, message_text):
        if len(message_text) < 2: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: —Ü–µ–Ω–∞ <—Å–µ–∫/–∫–ª–∏–∫/—Å–∫–∏–¥–∫–∞>")
        if message_text[1] == "—Å–µ–∫" or message_text[1] == "+—Å–µ–∫": bot.send_message(message.chat.id, f"–¶–µ–Ω–∞ –∑–∞ {file_readed['users'][str(message.from_user.id)]['sec'] + 1} –∞–ø–≥—Ä–µ–π–¥ +—Å–µ–∫ —Å–æ —Å–∫–∏–¥–∫–æ–π {rec_file.get_skidka(message.from_user.id, file_readed)}%: {rec_file.ob_chisla(rec_file.cal_boost_sec(message.from_user.id, file_readed))} –ö–®")
        elif message_text[1] == "–∫–ª–∏–∫" or message_text[1] == "+–∫–ª–∏–∫": bot.send_message(message.chat.id, f"–¶–µ–Ω–∞ –∑–∞ {file_readed['users'][str(message.from_user.id)]['click'] + 1} –∞–ø–≥—Ä–µ–π–¥ +–∫–ª–∏–∫ —Å–æ —Å–∫–∏–¥–∫–æ–π {rec_file.get_skidka(message.from_user.id, file_readed)}%: {rec_file.ob_chisla(rec_file.cal_boost_click(message.from_user.id, file_readed))} –ö–®")
        elif message_text[1] == "—Å–∫–∏–¥–∫–∞" or message_text[1] == "+—Å–∫–∏–¥–∫–∞" or message_text[1] == "—Å–∫–∏–¥–∫–∏" or message_text[1] == "+—Å–∫–∏–¥–∫–∏":
            if rec_file.get_skidka(message.from_user.id, file_readed) < 25: bot.send_message(message.chat.id, f"–¶–µ–Ω–∞ –∑–∞ {rec_file.get_skidka(message.from_user.id, file_readed) + 1} –∞–ø–≥—Ä–µ–π–¥ —Å–æ —Å–∫–∏–¥–∫–æ–π {rec_file.get_skidka(message.from_user.id, file_readed)}%: {rec_file.ob_chisla(rec_file.cal_boost_skidka(message.from_user.id, file_readed))} –ö–®")
            else: bot.send_message(message.chat.id, message_max_skidka())
        elif message_text[1] == "–±–±" or message_text[1] == "+–±–±" or message_text[1] == "–±–∞–ª–∞–Ω—Å" or message_text[1] == "–±–∞–ª–∞–Ω—Å–∞" or message_text[1] == "+–±–∞–ª–∞–Ω—Å–∞" or message_text[1] == "+–±–∞–ª–∞–Ω—Å" or message_text[1] == "–±–∞–ª–∞–Ω—Å/–¥–µ–Ω—å" or message_text[1] == "+–±–∞–ª–∞–Ω—Å/–¥–µ–Ω—å":
            if rec_file.get_boost_balance(message.from_user.id, file_readed) < 15: bot.send_message(message.chat.id, f"–¶–µ–Ω–∞ –∑–∞ {rec_file.get_boost_balance(message.from_user.id, file_readed) + 1} –∞–ø–≥—Ä–µ–π–¥ —Å–æ —Å–∫–∏–¥–∫–æ–π {rec_file.get_skidka(message.from_user.id, file_readed)}%: {rec_file.ob_chisla(rec_file.cal_boost_balance(message.from_user.id, file_readed))} –ö–®")
            else: bot.send_message(message.chat.id, message_max_boost_balance())
        else: bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø")
    def add_money(message, message_text):
        if rec_file.get_admin(message.from_user.id, file_readed) == True:
            if len(message_text) <= 2: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –¥–æ–±–∞–≤–∏—Ç—å <id/—Å–µ–±–µ> <—Å—É–º–º–∞>")
            try:
                sum = rec_file.ob_k_chisla(message_text[2])
                if message_text[1] == "_":
                    userid = message.reply_to_message
                    if userid != None: userid = userid.from_user.id
                    else: userid = 0
                else: userid = int(message_text[1])
                if userid not in rec_file.get_ids(file_readed): return bot.send_message(message.chat.id, "–Æ–∑–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                rec_file.append_balance(userid, int(rec_file.ob_k_chisla(sum)), file_readed)
                file_readed["users"][str(userid)]["othersProceeds"] += int(rec_file.ob_k_chisla(sum))
                bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é `{userid}` –Ω–∞—á–∏—Å–ª–µ–Ω–æ {rec_file.ob_chisla(sum)} –ö–®")
                bot.send_message(userid, f"–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {rec_file.ob_chisla(sum)} –ö–® –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
            except ValueError:
                try:
                    if message_text[1] == "—Å–µ–±–µ":
                        rec_file.append_balance(message.from_user.id, int(rec_file.ob_k_chisla(sum)), file_readed)
                        file_readed["users"][str(message.from_user.id)]["othersProceeds"] += int(rec_file.ob_k_chisla(sum))
                        bot.send_message(message.chat.id, f"–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {rec_file.ob_chisla(sum)} –ö–®")
                    else: bot.send_message(message.chat.id, "–Æ–∑–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                except ValueError:
                    bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –¥–æ–±–∞–≤–∏—Ç—å <id/—Å–µ–±–µ> <—Å—É–º–º–∞>")
        else:
            pass
    def balance(message, message_text):
        if len(message_text) == 1: bot.send_message(message.chat.id, f"id: `{message.from_user.id}`\n–ê–ø–≥—Ä–µ–π–¥—ã: {file_readed['users'][str(message.from_user.id)]['sec']}/—Å–µ–∫; {file_readed['users'][str(message.from_user.id)]['click']}/–∫–ª–∏–∫; {rec_file.get_skidka(message.from_user.id, file_readed)}% —Å–∫–∏–¥–∫–∏; {rec_file.get_boost_balance(message.from_user.id, file_readed)}% –±–∞–ª–∞–Ω—Å–∞/–¥–µ–Ω—å\n–ë–∞–ª–∞–Ω—Å: {rec_file.ob_chisla(file_readed['users'][str(message.from_user.id)]['balance'])} –ö–®")
        elif len(message_text) >= 2:
            try:
                if message_text[1] == "_":
                    userid = message.reply_to_message
                    if userid != None: userid = userid.from_user.id
                    else: userid = 0
                else: userid = int(message_text[1])
                if userid not in rec_file.get_ids(file_readed): return bot.send_message(message.chat.id, "id –Ω–µ –Ω–∞–π–¥–µ–Ω")
                bot.send_message(message.chat.id, f"id: `{userid}`\n–ê–ø–≥—Ä–µ–π–¥—ã: {file_readed['users'][str(userid)]['sec']}/—Å–µ–∫; {file_readed['users'][str(userid)]['click']}/–∫–ª–∏–∫; {rec_file.get_skidka(userid, file_readed)}% —Å–∫–∏–¥–∫–∏; {rec_file.get_boost_balance(userid, file_readed)}% –±–∞–ª–∞–Ω—Å–∞/–¥–µ–Ω—å\n–ë–∞–ª–∞–Ω—Å: {rec_file.ob_chisla(file_readed['users'][str(userid)]['balance'])} –ö–®")
            except ValueError: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ë–∞–ª–∞–Ω—Å/–± [id]")
    def upgrades(message, message_text):
        rec_file.set_active_passive_keyboard(message.chat.id, True, bot.get_chat(message.chat.id).type, file_readed)
        if (bot.get_chat(message.chat.id).type == "private"):
            if rec_file.get_keyboard(message.from_user.id, file_readed) == True:
                bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –º–µ–Ω—é –∞–ø–≥—Ä–µ–π–¥–æ–≤", reply_markup=upgades_buttons(message.from_user.id))
            elif rec_file.get_keyboard(message.from_user.id, file_readed) == False:
                bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –º–µ–Ω—é –∞–ø–≥—Ä–µ–π–¥–æ–≤")
        else:
            if (file_readed["groups"][str(message.chat.id)]["keyboard"]):
                bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –º–µ–Ω—é –∞–ø–≥—Ä–µ–π–¥–æ–≤", reply_markup=upgades_buttons(message.from_user.id))
            if (file_readed["groups"][str(message.chat.id)]["keyboard"] == False):
                bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –º–µ–Ω—é –∞–ø–≥—Ä–µ–π–¥–æ–≤")
    def back(message, message_text):
        if (bot.get_chat(message.chat.id).type == "private"):
            if rec_file.get_keyboard(message.from_user.id, file_readed): bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–µ–Ω—é", reply_markup=main_menu_buttons())
            else: bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–µ–Ω—é")
        else:
            if (file_readed["groups"][str(message.chat.id)]["keyboard"]): bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–µ–Ω—é", reply_markup=main_menu_buttons())
            else: bot.send_message(message.chat.id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–µ–Ω—é")
        rec_file.set_active_passive_keyboard(message.chat.id, False, bot.get_chat(message.chat.id).type, file_readed)
    def moneta(message, message_text):
        if len(message_text) < 3: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –º–æ–Ω–µ—Ç–∞ <—Å—Ç–∞–≤–∫–∞/–≤—Å—ë> <–æ—Ä–µ–ª/—Ä–µ—à–∫–∞>")
        if message_text[1] == "–≤—Å–µ": bot.send_message(message.chat.id, rec_file.moneta_stavka(message.from_user.id, str(rec_file.get_balance(message.from_user.id, file_readed)), message_text[2], file_readed))
        else:
            sum = rec_file.ob_k_chisla(message_text[1])
            bot.send_message(message.chat.id, rec_file.moneta_stavka(message.from_user.id, sum, message_text[2], file_readed))
    def reset(message, message_text):
        if len(message_text) < 2: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: —Å–±—Ä–æ—Å <–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å/—Å–ø—Ä–∞–≤–∫–∞>")
        if message_text[1] == "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":
            rec_file.clear_id(message.from_user.id, file_readed)
            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω!")
        elif message_text[1] == "—Å–ø—Ä–∞–≤–∫–∞": bot.send_message(message.chat.id, "–ê –Ω–µ—Ç –µ—ë –µ—â—ë, –Ω–µ –∑–∞–ø–∏–ª–∏–ª–∏!")
        else:
            if rec_file.get_admin(message.from_user.id, file_readed):
                try:
                    if message_text[1] == "_":
                        a = message.reply_to_message
                        if a != None: a = a.from_user.id
                        else: a = 0
                    else: a = int(message_text[1])
                    if a not in rec_file.get_ids(file_readed): return bot.send_message(message.chat.id, "–¢–∞–∫–æ–π id –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                    rec_file.clear_id(a, file_readed)
                    bot.send_message(message.chat.id, f"–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{a}` —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω!")
                    sendmessage_check_active_keyboard(a, a, bot.get_chat(message.chat.id).type, "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")
                except ValueError: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: —Å–±—Ä–æ—Å <–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å/—Å–ø—Ä–∞–≤–∫–∞/id —é–∑–µ—Ä–∞>")
            if rec_file.get_admin(message.from_user.id, file_readed) == 0: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: —Å–±—Ä–æ—Å <–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å/—Å–ø—Ä–∞–≤–∫–∞>")
    def pay(message, message_text):
        if len(message_text) < 3: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø–µ—Ä–µ–≤–æ–¥ <—Å—É–º–º–∞> <id –ø–æ–ª—É—á–∞—Ç–µ–ª—è> [–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]")
        if (message_text[1] == "#r"): sum = random.randint(1, rec_file.get_balance(message.from_user.id, file_readed))
        else:
            if message_text[1][-1] == "%":
                if 1 <= int(message_text[1][:-1:]) <= 100:
                    try: sum = rec_file.get_balance(message.from_user.id, file_readed)*int(message_text[1][:-1:])//100
                    except: return bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø–µ—Ä–µ–≤–æ–¥ <1%-100%> <id –ø–æ–ª—É—á–∞—Ç–µ–ª—è> [–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]")
                else: return bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø–µ—Ä–µ–≤–æ–¥ <1%-100%> <id –ø–æ–ª—É—á–∞—Ç–µ–ª—è> [–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]")
            else:
                try: sum = int(rec_file.ob_k_chisla(message_text[1]))
                except ValueError:
                    if message_text[1] == "–≤—Å–µ" or message_text[1] == "–≤—Å—ë": sum = int(round(rec_file.get_balance(message.from_user.id, file_readed)))
                    else: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø–µ—Ä–µ–≤–æ–¥ <—Å—É–º–º–∞> <id –ø–æ–ª—É—á–∞—Ç–µ–ª—è> *[–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]*")
        try:
            if message_text[2] == "#r":
                ids = rec_file.get_ids(file_readed)
                random.shuffle(ids)
                poly4atel = ids[0]
            elif message_text[2] == "_":
                poly4atel = message.reply_to_message
                if poly4atel != None: poly4atel = poly4atel.from_user.id
                else: poly4atel = 0
            else: poly4atel = int(message_text[2])
            if poly4atel not in rec_file.get_ids(file_readed): return bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º id –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            if rec_file.get_balance(message.from_user.id, file_readed) < sum: return bot.send_message(message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
            if sum < 100: return bot.send_message(message.chat.id, "–ü–µ—Ä–µ–≤–æ–¥—ã –º–µ–Ω—å—à–µ 100 –ö–® –∑–∞–ø—Ä–µ—â–µ–Ω—ã")
            rec_file.append_balance(message.from_user.id, -sum, file_readed)
            file_readed["users"][str(message.from_user.id)]["paidKkh"] += sum
            rec_file.append_balance(poly4atel, sum, file_readed)
            file_readed["users"][str(poly4atel)]["receivedKkh"] += sum
            send_message = f"–ü–µ—Ä–µ–≤–æ–¥ {rec_file.ob_chisla(sum)} –ö–® –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é `{poly4atel}` –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
            if len(message_text) >= 4:
                comment = message.text.split(" ")
                send_message = f"{send_message}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–µ—Ä–µ–≤–æ–¥—É: "
                for i in range(3, len(message_text)):
                    send_message += f"{comment[i]} "
            bot.send_message(message.chat.id, send_message)
            send_message = f"–ü–æ–ª—É—á–µ–Ω –ø–µ—Ä–µ–≤–æ–¥ {rec_file.ob_chisla(sum)} –ö–® –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{message.from_user.id}`"
            if len(message_text) >= 4:
                send_message = f"{send_message}\n–°–æ–æ–±—â–µ–Ω–∏–µ: "
                for i in range(3, len(message_text)):
                    send_message += f"{comment[i]} "
            bot.send_message(poly4atel, send_message) 
        except ValueError: bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–æ–µ id –ø–æ–ª—É—á–∞—Ç–µ–ª—è! id –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã")
    def admin(message, message_text):
        if message.from_user.id == 357694314:
            if len(message_text) == 1: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∞–¥–º–∏–Ω [–¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å] <id>")
            elif len(message_text) >= 2:
                if message_text[1] == "–¥–æ–±–∞–≤–∏—Ç—å" or message_text[1] == "–Ω–∞–∑–Ω–∞—á–∏—Ç—å":
                    if len(message_text) < 3: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∞–¥–º–∏–Ω –¥–æ–±–∞–≤–∏—Ç—å <id>")
                    try: user = int(message_text[2])
                    except:
                        if message_text[2] == "—Å–µ–±—è" or message_text[2] == "—Å–µ–±–µ" or message_text[2] == "—è": user = message.from_user.id
                        elif (message_text[2] == "_") and (message.reply_to_message != None): user = message.reply_to_message.from_user.id;
                        else: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∞–¥–º–∏–Ω –¥–æ–±–∞–≤–∏—Ç—å <id>")
                    if user not in rec_file.get_ids(file_readed): return bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{message_text[2]}` –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    if rec_file.get_admin(user, file_readed): return bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{message_text[2]}` —É–∂–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                    rec_file.set_admin(user, file_readed)
                    bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{message_text[2]}` –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")
                    bot.send_message(user, "–í–∞—Å –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –≤–µ–¥–∏—Ç–µ —Å–µ–±—è —Ö–æ—Ä–æ—à–æ!")
                elif message_text[1] == "—É–¥–∞–ª–∏—Ç—å" or message_text[1] == "—Å–Ω—è—Ç—å":
                    if len(message_text) < 3: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∞–¥–º–∏–Ω —É–¥–∞–ª–∏—Ç—å <id>")
                    try: user = int(message_text[2])
                    except:
                        if message_text[2] == "—Å–µ–±—è" or message_text[2] == "—Å–µ–±–µ" or message_text[2] == "—è": user = message.from_user.id
                        elif (message_text[2] == "_") and (message.reply_to_message != None): user = message.reply_to_message.from_user.id;
                        else: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∞–¥–º–∏–Ω —É–¥–∞–ª–∏—Ç—å <id>")
                    if user not in rec_file.get_ids(file_readed): return bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{message_text[2]}` –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    if rec_file.get_admin(user, file_readed) == False: return bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{message_text[2]}` –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
                    rec_file.unset_admin(user, file_readed)
                    bot.send_message(message.chat.id, f"–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{message_text[2]}` —Å–Ω—è—Ç—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
                    bot.send_message(user, "–° –≤–∞—Å —Å–Ω—è—Ç—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ç–æ—Ä–∞!")  
                else: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∞–¥–º–∏–Ω [–¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å] <id>")
        else:
            if rec_file.get_admin(message.from_user.id, file_readed) == True: bot.send_message(message.chat.id, "–¢—ã –∞–¥–º–∏–Ω")
            else: bot.send_message(message.chat.id, "–¢—ã –Ω–µ –∞–¥–º–∏–Ω")
    def bonus(message, message_text):
        if rec_file.get_time_now() - rec_file.get_time_give_bonus(message.from_user.id, file_readed) < 86400: return bot.send_message(message.chat.id, f"–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å —É–∂–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω —Å–µ–≥–æ–¥–Ω—è\n–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞: {rec_file.ob_vremeni_bonusa(rec_file.get_time_give_bonus(message.from_user.id, file_readed) + 86400 - rec_file.get_time_now())}")
        rec_file.set_time_give_bonus(message.from_user.id, message.date, file_readed)
        bot.send_message(message.chat.id, rec_file.give_bonus(message.from_user.id, file_readed))
    def bonus2(message, message_text):
        if (rec_file.get_time_now() - rec_file.get_time_give_bonus2(message.from_user.id, file_readed)) < 28800: return bot.send_message(message.chat.id, f"–ë–æ–Ω—É—Å2 –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∫–∞–∂–¥—ã–µ 8 —á–∞—Å–æ–≤\n–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞2: {rec_file.ob_vremeni_bonusa(rec_file.get_time_give_bonus2(message.from_user.id, file_readed) + 28800 - rec_file.get_time_now())}")
        rec_file.set_time_give_bonus2(message.from_user.id, message.date, file_readed)
        bot.send_message(message.chat.id, rec_file.give_bonus2(message.from_user.id, file_readed))
    def activate_promo(message, message_text):
        global file_readed
        if len(message_text) < 2: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–º–æ <–∫–æ–¥>")
        file_readed, inf_message = rec_file.activation_promo(message.from_user.id, message_text[1], file_readed)
        bot.send_message(message.chat.id, inf_message)
    def keyboard(message, message_text):
        if len(message_text) == 2:
            if message_text[1] == "–Ω–µ—Ç" or message_text[1] == "–≤—ã–∫–ª—é—á–∏—Ç—å":
                rec_file.keyboard_off(message.chat.id, bot.get_chat(message.chat.id).type, file_readed)
                bot.send_message(message.chat.id, "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞", reply_markup=types.ReplyKeyboardRemove())
            elif message_text[1] == "–¥–∞" or message_text[1] == "–≤–∫–ª—é—á–∏—Ç—å":
                rec_file.keyboard_on(message.chat.id, bot.get_chat(message.chat.id).type, file_readed)
                bot.send_message(message.chat.id, "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞", reply_markup=main_menu_buttons())
        else:
            bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ <–¥–∞/–Ω–µ—Ç>")
    def rassilka(message, message_text):
        if len(message_text) >= 3:
            if rec_file.get_admin(message.from_user.id, file_readed) == True:
                if message_text[1] == "—Å–æ–∑–¥–∞—Ç—å":
                    message_text = message.text.split(" ")
                    msg = message_text[2::]
                    send_message = ""
                    for i in msg:
                        send_message += i + " "
                    send_message += "\n____\n–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–µ—Ç"
                    for i in rec_file.get_ids(file_readed):
                        if rec_file.get_rassilka(i, file_readed) == True:
                            try:
                                bot.send_message(i, send_message, parse_mode="HTML")
                            except: pass
                    bot.send_message(message.chat.id, send_message, parse_mode="HTML")
                else: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–Ω–∏–µ: —Ä–∞—Å—Å—ã–ª–∫–∞ <—Å–æ–∑–¥–∞—Ç—å> <—Å–æ–æ–±—â–µ–Ω–∏–µ>")
            else: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–Ω–∏–µ: —Ä–∞—Å—Å—ã–ª–∫–∞ <–¥–∞/–Ω–µ—Ç>")
        elif len(message_text) == 2 and (message_text[1] == "–¥–∞" or message_text[1] == "–Ω–µ—Ç"):
            if message_text[1] == "–¥–∞":
                rec_file.set_rassilka(message.from_user.id, True, file_readed)
                bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞.\n–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–µ—Ç")
            elif message_text[1] == "–Ω–µ—Ç":
                rec_file.set_rassilka(message.from_user.id, False, file_readed)
                bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.\n–î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∞ –¥–∞")
            else: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–Ω–∏–µ: —Ä–∞—Å—Å—ã–ª–∫–∞ <–¥–∞/–Ω–µ—Ç>")
        else:
            if rec_file.get_admin(message.from_user.id, file_readed) == True: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–Ω–∏–µ: —Ä–∞—Å—Å—ã–ª–∫–∞ <–¥–∞/–Ω–µ—Ç> –∏–ª–∏ —Ä–∞—Å—Å—ã–ª–∫–∞ <—Å–æ–∑–¥–∞—Ç—å> <—Å–æ–æ–±—â–µ–Ω–∏–µ>")
            else: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–Ω–∏–µ: —Ä–∞—Å—Å—ã–ª–∫–∞ <–¥–∞/–Ω–µ—Ç>")
    def backup(message, message_text):
        if rec_file.get_admin(message.from_user.id, file_readed) == True:
            if len(message_text) < 2: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –±—ç–∫–∞–ø <—Å–æ–∑–¥–∞—Ç—å>\n–°–æ–∑–¥–∞—ë—Ç –±—ç–∫–∞–ø –≤ –ø–∞–ø–∫—É —Å –±–µ–∫–∞–ø–∞–º–∏ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤ –æ–±–ª–∞–∫–æ.")
            if message_text[1] == "—Å–æ–∑–¥–∞—Ç—å": bot.send_message(message.chat.id, manual_backup())
            else: bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –±—ç–∫–∞–ø <—Å–æ–∑–¥–∞—Ç—å>")
    def buy_procent_balance(message, message_text):
        if rec_file.get_boost_balance(message.from_user.id, file_readed) >= 15: return bot.send_message(message.chat.id, message_max_boost_balance())
        if len(message_text) == 1:
            if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_balance(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_boost_balance(message))
            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_balance(message.from_user.id, file_readed), file_readed)
            rec_file.append_boost_balance(message.from_user.id, 1, file_readed)
            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
        elif len(message_text) >= 2:
            if rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_balance(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_boost_balance(message))
            a = 0
            try:
                for i in range(0, int(message_text[1])):
                    if rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_balance(message.from_user.id, file_readed):
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_balance(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
                        rec_file.append_boost_balance(message.from_user.id, 1, file_readed)
                        a += 1
                sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
            except:
                try:
                    if message_text[1][0] == "(" and message_text[2][-1] == ")":
                        if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_balance(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_boost_balance(message))
                        rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_balance(message.from_user.id, file_readed), file_readed)
                        file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
                        rec_file.append_boost_balance(message.from_user.id, 1, file_readed)
                        sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
                    elif message_text[1] == "–≤—Å–µ" or message_text[1] == "–≤—Å—ë":
                        print(rec_file.cal_boost_balance(message.from_user.id, file_readed))
                        if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_balance(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_boost_balance(message))
                        while rec_file.get_balance(message.from_user.id, file_readed) >= rec_file.cal_boost_balance(message.from_user.id, file_readed):
                            rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_balance(message.from_user.id, file_readed), file_readed)
                            file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
                            rec_file.append_boost_balance(message.from_user.id, 1, file_readed)
                            a += 1
                            sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, a))
                    else:
                        sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä +—Å–µ–∫ [–∫–æ–ª-–≤–æ –∞–ø–≥—Ä–µ–π–¥–æ–≤]")
                except:
                    pass
    def buy_procent_balance_2(message, message_text):
        if rec_file.get_boost_balance(message.from_user.id, file_readed) >= 15: return bot.send_message(message.chat.id, message_max_boost_balance())
        if len(message_text) >= 2:
            if message_text[1] == "–±–∞–ª–∞–Ω—Å–∞/–¥–µ–Ω—å":
                try:
                    if rec_file.get_balance(message.from_user.id, file_readed) < rec_file.cal_boost_balance(message.from_user.id, file_readed): return bot.send_message(message.chat.id, message_not_enough_money_boost_balance(message))
                    rec_file.append_balance(message.from_user.id, -rec_file.cal_boost_balance(message.from_user.id, file_readed), file_readed)
                    file_readed["users"][str(message.from_user.id)]["spendKkhUpgrades"] += rec_file.cal_boost_balance(message.from_user.id, file_readed)
                    rec_file.append_boost_balance(message.from_user.id, 1, file_readed)
                    sendmessage_check_active_keyboard(message.chat.id, message.from_user.id, bot.get_chat(message.chat.id).type, message_bought_upgrade(message, 1))
                except: pass
    def main_menu(message, message_text):
        if (bot.get_chat(message.chat.id).type == "private"):
            if rec_file.get_keyboard(message.from_user.id, file_readed) == True: bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_buttons())
            else: bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        else:
            if (file_readed["groups"][str(message.chat.id)]["keyboard"]): bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_buttons())
            else: bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        rec_file.set_active_passive_keyboard(message.chat.id, False, bot.get_chat(message.chat.id).type, file_readed)
    def full_inf_user(message, message_text):
        if rec_file.get_admin(message.from_user.id, file_readed) == True:
            if len(message_text) >= 2:
                try:
                    id = int(message_text[1])
                except:
                    if message_text[1] == "_":
                        id = message.reply_to_message
                        if id != None: id = id.from_user.id
                        else: id = 0
                    else: id = 0
                if (id == 0): id = message.from_user.id
                if id != 0:
                    name = file_readed["users"][str(id)]["firstName"]
                    if (file_readed["users"][str(id)]["lastName"] != None):
                        name += file_readed["users"][str(id)]["lastName"]
                    bot.send_message(message.chat.id, f"–ò–º—è: {name};\n–ë–∞–ª–∞–Ω—Å: {rec_file.ob_chisla(file_readed['users'][str(id)]['balance'])};\n–ö–ª–∏–∫: {file_readed['users'][str(id)]['click']};\n–°–µ–∫: {file_readed['users'][str(id)]['sec']};\n–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {file_readed['users'][str(id)]['keyboard']};\n–°–∫–∏–¥–∫–∞: {100 - int(file_readed['users'][str(id)]['sale'])};\n–ê–¥–º–∏–Ω: {file_readed['users'][str(id)]['isAdmin']};\n–ú–Ω–æ–∂–∏—Ç–µ–ª—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞: {file_readed['users'][str(id)]['multiplier']};\n–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–ø–≥—Ä–µ–π–¥—ã: {file_readed['users'][str(id)]['activeKeyboard']};\n–†–∞—Å—Å—ã–ª–∫–∞: {file_readed['users'][str(id)]['mails']};\n–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞: {rec_file.ob_vremeni(file_readed['users'][str(id)]['timeLastBonus'])};\n–ë—É—Å—Ç –±–∞–ª–∞–Ω—Å–∞: {file_readed['users'][str(id)]['balanceBoost']};\n–ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞: {file_readed['users'][str(id)]['lastCommand']} –≤ {rec_file.ob_vremeni(file_readed['users'][str(id)]['timeLastCommand'])};\n–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞2: {rec_file.ob_vremeni(file_readed['users'][str(id)]['timeLastSecondBonus'])};\n–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã: {file_readed['users'][str(id)]['activatedPromos']};\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {rec_file.ob_vremeni(file_readed['users'][str(id)]['registerTime'])}", parse_mode="HTML")
    def del_user(message, message_text):
        if rec_file.get_admin(message.from_user.id, file_readed) == False: return
        if len(message_text) < 2: return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –¥—é–∑–µ—Ä <id>")
        try: id = int(message_text[1])
        except ValueError:
            if message_text[1] == "_":
                if (message.reply_to_message != None): id = message.reply_to_message.from_user.id;
                else: return bot.send_message(message.chat.id, "ID –¥–æ–∂–¥–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä!")
            return bot.send_message(message.chat.id, "ID –¥–æ–∂–¥–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä!")
        if id not in rec_file.get_ids(file_readed): return bot.send_message(message.chat.id, "ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        rec_file.remove_id(id, file_readed)
        bot.send_message(message.chat.id, "ID —É–¥–∞–ª—ë–Ω –∏–∑ –±–¥")
    def userlist(message, message_text):
        if rec_file.get_admin(message.from_user.id, file_readed) == False: return
        send_message = f"–í–æ—Ç id –≤—Å–µ—Ö {len(file_readed['users'].keys()) - 1} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
        for i in file_readed["users"].keys():
            if (i != "default"):
                name = f"{bot.get_chat(i).first_name}"
                if (bot.get_chat(i).last_name != None):
                    name += f" {bot.get_chat(i).last_name}"
                send_message += f"\n{i} ({name}), "
        send_message = send_message[:-2:]
        bot.send_message(message.chat.id, send_message)
    def manual_write_file(message, message_text):
        rec_file.write(file_readed)
        bot.send_message(message.chat.id, "–ë–î –∑–∞–ø–∏—Å–∞–Ω–∞")
    def addPromo(message, message_text):
        if (rec_file.get_admin(message.from_user.id, file_readed) == False): return;
        paramsPromos = rec_file.promo_read("default");
        paramsPromos.pop("activationLimit");
        paramsPromos.pop("activatedTimes");
        paramsPromos.pop("validity");
        if (len(message_text) == 2):
            bot.send_message(message.chat.id, f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–º–æ –¥–æ–±–∞–≤–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ> <params({paramsPromos})> <–∫–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π> <–≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è>");
        elif (len(message_text) >= 3) and (message_text[2] == "–ø–æ–º–æ—â—å"):
            bot.send_message(message.chat.id, f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–º–æ –¥–æ–±–∞–≤–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ> <params({paramsPromos})> <–∫–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π> <–≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è>");
        elif (len(message_text) >= 6):
            name = message_text[2];
            paramsDictSTR = message_text[3];
            try: paramsDict = json.loads(paramsDictSTR.replace("'",'"'))
            except: return bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")
            activationLimit = int(message_text[4]);
            durationTime = message_text[5];
            bot.send_message(message.chat.id, rec_file.promo_append(name, paramsDict, activationLimit, durationTime, file_readed));
            #except: return bot.send_message(message.chat.id, f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–º–æ –¥–æ–±–∞–≤–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ> <params({paramsPromos})> <–∫–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π> <–≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è>")
    def commandsList(message, message_text):
        if (rec_file.get_admin(message.from_user.id, file_readed)): bot.send_message(message.chat.id, config["messages"]["commandsList"], parse_mode="HTML");
        else: bot.send_message(message.chat.id, config["messages"]["commandsListUser"], parse_mode="HTML");
    def helpCommand(message, message_text):
        if (len(message_text) < 2): return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –∫–æ–º–∞–Ω–¥–∞ <–∫–æ–º–∞–Ω–¥–∞>");
        if (message_text[1] == "–±—ç–∫–∞–ø"):
            bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –±—ç–∫–∞–ø <—Å–æ–∑–¥–∞—Ç—å>\n–°–æ–∑–¥–∞—ë—Ç –±—ç–∫–∞–ø –≤ –ø–∞–ø–∫—É —Å –±–µ–∫–∞–ø–∞–º–∏ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤ –æ–±–ª–∞–∫–æ.");
        elif (message_text[1] == "–±–¥–∑–∞–ø–∏—Å—å"):
            bot.send_message(message.chat.id, "–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –±–¥ –≤ —Ñ–∞–π–ª");
        elif (message_text[1] == "–∫–º–¥"):
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ—Ç –∏–º–µ–Ω–∏ –¥—Ä—É–≥–æ–≥–æ —é–∑–µ—Ä–∞\n–ö–º–¥ <id —é–∑–µ—Ä–∞> <–∫–æ–º–∞–Ω–¥–∞> *[–∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã]*");
        elif (message_text[1] == "–∫–æ–º–∞–Ω–¥—ã"):
            bot.send_message(message.chat.id, "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n–ö–æ–º–∞–Ω–¥—ã");
        elif (message_text[1] == "–∫–æ–º–∞–Ω–¥–∞"):
            bot.send_message(message.chat.id, "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–º–∞–Ω–¥—ã\n–ö–æ–º–∞–Ω–¥–∞ <–∫–æ–º–∞–Ω–¥–∞>");
        elif (len(message_text) > 2) and (message_text[1] == "–≥–ª–∞–≤–Ω–æ–µ") and (message_text[2] == "–º–µ–Ω—é"):
            bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
        elif (message_text[1] == "–∞–ø–≥—Ä–µ–π–¥—ã"):
            bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –∞–ø–≥—Ä–µ–π–¥–æ–≤\n–ê–ø–≥—Ä–µ–π–¥—ã");
        elif (message_text[1] == "–±–æ–Ω—É—Å"):
            bot.send_message(message.chat.id, "–ó–∞–±—Ä–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å\n–ë–æ–Ω—É—Å");
        elif (message_text[1] == "–∫–ª–∏–∫"):
            bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª—è–µ—Ç –∫ –±–∞–ª–∞–Ω—Å—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ \–∫–ª–∏–∫\n–ö–ª–∏–∫");
        elif (message_text[1] == "—Ü–µ–Ω–∞"):
            bot.send_message(message.chat.id, "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –∞–ø–≥—Ä–µ–π–¥–∞\n–¶–µ–Ω–∞ <–∞–ø–≥—Ä–µ–π–¥>");
        elif (message_text[1] == "–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"):
            bot.send_message(message.chat.id, "–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ\n–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ <–¥–∞/–Ω–µ—Ç>");
        elif (message_text[1] == "–ø—Ä–æ–º–æ"):
            bot.send_message(message.chat.id, "–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥\n–ü—Ä–æ–º–æ <–ø—Ä–æ–º–æ–∫–æ–¥>");
        elif (message_text[1] == "—Ä–∞—Å—Å—ã–ª–∫–∞"):
            bot.send_message(message.chat.id, "–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏\n–†–∞—Å—Å—ã–ª–∫–∞ <–¥–∞/–Ω–µ—Ç>");
        elif (message_text[1] == "–ø–µ—Ä–µ–≤–æ–¥"):
            bot.send_message(message.chat.id, "–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n–ü–µ—Ä–µ–≤–æ–¥ <—Å—É–º–º–∞> <id –ø–æ–ª—É—á–∞—Ç–µ–ª—è> *[–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]*");
        elif (message_text[1] == "–∏–Ω—Ñ–æ"):
            bot.send_message(message.chat.id, "–í—ã–¥–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–¥\n–ò–Ω—Ñ–æ <id —é–∑–µ—Ä–∞>");
        elif (message_text[1] == "–¥—é–∑–µ—Ä"):
            bot.send_message(message.chat.id, "–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥\n–î—é–∑–µ—Ä <id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>");
        elif (message_text[1] == "–±–∞–ª–∞–Ω—Å"):
            bot.send_message(message.chat.id, "–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n–ë–∞–ª–∞–Ω—Å *[id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]*");
        elif (message_text[1] == "–±–æ–Ω—É—Å2"):
            bot.send_message(message.chat.id, "–ó–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å2\n–ë–æ–Ω—É—Å2");
        elif (message_text[1] == "–º–æ–Ω–µ—Ç–∞"):
            bot.send_message(message.chat.id, "–ò–≥—Ä–∞—Ç—å –≤ –º–æ–Ω–µ—Ç—É –Ω–∞ –¥–µ–Ω—å–≥–∏\n–ú–æ–Ω–µ—Ç–∞ <—Å—Ç–∞–≤–∫–∞> <–æ—Ä–µ–ª/—Ä–µ—à–∫–∞>");
        elif (message_text[1] == "–∞–¥–º–∏–Ω"):
            bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞\n–ê–¥–º–∏–Ω");
        elif (message_text[1] == "—é–∑–µ—Ä—Å–ª–∏—Å—Ç"):
            bot.send_message(message.chat.id, "–ü–µ—Ä–µ–¥–∞—ë—Ç id –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤\n–Æ–∑–µ—Ä—Å–ª–∏—Å—Ç");
        elif (message_text[1] == "–ø–æ—Å–ª–∞—Ç—å"):
            bot.send_message(message.chat.id, "–ü–æ—Å—ã–ª–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ (1.000.000 –ö–®)\n–ü–æ—Å–ª–∞—Ç—å <id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>");
        elif (message_text[1] == "–ø–æ—Å–ª–∞—Ç—å–∞–Ω–æ–Ω"):
            bot.send_message(message.chat.id, "–ê–Ω–æ–Ω–∏–º–Ω–æ –ø–æ—Å—ã–ª–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ (3.000.000 –ö–®)\n–ü–æ—Å–ª–∞—Ç—å–∞–Ω–æ–Ω <id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>");
        elif (message_text[1] == "chatinfo"):
            bot.send_message(message.chat.id, "–ü–µ—Ä–µ–¥–∞—ë—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ\nchatinfo <id —á–∞—Ç–∞>");
        elif (message_text[1] == "—Ç–æ–ø"):
            bot.send_message(message.chat.id, "–í—ã–¥–∞—ë—Ç —Ç–æ–ø –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n–¢–æ–ø [<b>–±–∞–ª–∞–Ω—Å</b>/–∫–ª–∏–∫/—Å–µ–∫] [—Å—Ç—Ä–∞–Ω–∏—Ü–∞]", parse_mode="HTML");
    def delPromo(message, message_text):
        if (rec_file.get_admin(message.from_user.id, file_readed) == False): return;
        if (len(message_text) < 3): return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–º–æ —É–¥–∞–ª–∏—Ç—å <–Ω–∞–∑–≤–∞–Ω–∏–µ>");
        bot.send_message(message.chat.id, rec_file.promo_remove(message_text[2], file_readed));
    def sendUser(message, message_text):
        if (len(message_text) < 2) and (message_text[0] == "–ø–æ—Å–ª–∞—Ç—å"): return bot.send_message(message.chat.id, "–ü–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (1.000.000 –ö–®): –ü–æ—Å–ª–∞—Ç—å <id —é–∑–µ—Ä–∞>");
        if (len(message_text) < 2) and (message_text[0] == "–ø–æ—Å–ª–∞—Ç—å–∞–Ω–æ–Ω"): return bot.send_message(message.chat.id, "–ê–Ω–æ–Ω–∏–º–Ω–æ –ø–æ—Å–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (3.000.000 –ö–®): –ü–æ—Å–ª–∞—Ç—å–∞–Ω–æ–Ω <id —é–∑–µ—Ä–∞>");
        try: id = int(message_text[1]);
        except: 
            if (message_text[1] == "_"):
                if (message.reply_to_message != None): id = message.reply_to_message.from_user.id;
                else: return bot.send_message(message.chat.id, "–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ _ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —é–∑–µ—Ä–∞");
            else: return bot.send_message(message.chat.id, "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä!");
        if (message_text[0] == "–ø–æ—Å–ª–∞—Ç—å"):
            if (rec_file.get_balance(message.from_user.id, file_readed) < 1000000): return bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ö–®!");
            rec_file.append_balance(message.from_user.id, -1000000, file_readed);
            file_readed["users"][str(message.from_user.id)]["othersSpends"] += 1000000
            bot.send_message(id, f"–í–∞—Å –ø–æ—Å–ª–∞–ª –Ω–∞—Ö—É–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{message.from_user.id}`");
            bot.send_message(message.chat.id, f"–í—ã –ø–æ—Å–ª–∞–ª–∏ –Ω–∞—Ö—É–π –∏–≥—Ä–æ–∫–∞ `{id}`");
        elif (message_text[0] == "–ø–æ—Å–ª–∞—Ç—å–∞–Ω–æ–Ω"):
            if (rec_file.get_balance(message.from_user.id, file_readed) < 3000000): return bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ö–®!");
            rec_file.append_balance(message.from_user.id, -3000000, file_readed);
            file_readed["users"][str(message.from_user.id)]["othersSpends"] += 3000000
            bot.send_message(id, f"–í–∞—Å –∞–Ω–æ–Ω–∏–º–Ω–æ –ø–æ—Å–ª–∞–ª–∏ –Ω–∞—Ö—É–π");
            bot.send_message(message.chat.id, f"–í—ã –∞–Ω–æ–Ω–∏–º–Ω–æ –ø–æ—Å–ª–∞–ª–∏ –Ω–∞—Ö—É–π –∏–≥—Ä–æ–∫–∞ `{id}`");
    def promoInf(message, message_text):
        if (rec_file.get_admin(message.from_user.id, file_readed) == False): return
        if (len(message_text) < 3): return bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–º–æ –∏–Ω—Ñ–æ <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞>")
        if (rec_file.promo_check(message_text[2]) == False): return bot.send_message(message.chat.id, f"–ü—Ä–æ–º–æ–∫–æ–¥ {message_text[2]} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        bot.send_message(message.chat.id, rec_file.promo_info(message_text[2]))
    def promoList(message, message_text):
        if (rec_file.get_admin(message.from_user.id, file_readed) == False): return
        bot.send_message(message.chat.id, rec_file.promo_list())
    def userTop(message, message_text):
        if (len(message_text) < 2) or ((len(message_text) >= 2) and message_text[1] == "–±–∞–ª–∞–Ω—Å"):
            if (len(message_text) < 3): bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "–±", message.from_user.id, 1), parse_mode="HTML")
            else: 
                try:
                    page = int(message_text[2])
                    bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "–±", message.from_user.id, page), parse_mode="HTML")
                except Exception as e:
                    print(e)
                    bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "–±", message.from_user.id, 1), parse_mode="HTML")
        elif (len(message_text) >= 2) and (message_text[1] == "–∫–ª–∏–∫"):
            if (len(message_text) < 3): bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "–∫", message.from_user.id, 1), parse_mode="HTML")
            else: 
                try:
                    page = int(message_text[2])
                    bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "–∫", message.from_user.id, page), parse_mode="HTML")
                except: bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "–∫", message.from_user.id, 1), parse_mode="HTML")
        elif (len(message_text) >= 2) and (message_text[1] == "—Å–µ–∫"):
            if (len(message_text) < 3): bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "—Å", message.from_user.id, 1), parse_mode="HTML")
            else: 
                try:
                    page = int(message_text[2])
                    bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "—Å", message.from_user.id, page), parse_mode="HTML")
                except: bot.send_message(message.chat.id, rec_file.leaderboard(file_readed, "—Å", message.from_user.id, 1), parse_mode="HTML")
        else:
            bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: —Ç–æ–ø [<b>–±–∞–ª–∞–Ω—Å</b>/–∫–ª–∏–∫/—Å–µ–∫] [—Å—Ç—Ä–∞–Ω–∏—Ü–∞]", parse_mode="HTML")
    def chatInfo(message, message_text):
        if (rec_file.get_admin(message.from_user.id, file_readed)):
            if (len(message_text) < 2): return bot.reply_to(message, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: chatinfo <chatid>")
            try: id = int(message_text[1])
            except: return bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω–æ–µ id —á–∞—Ç–∞!")
            bot.reply_to(message, bot.get_chat(id), parse_mode="HTML")

bot.polling(none_stop=True, interval=1, timeout=123)
#962 -> 630
